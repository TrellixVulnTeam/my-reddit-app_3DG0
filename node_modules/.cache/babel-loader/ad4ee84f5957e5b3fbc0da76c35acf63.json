{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emily\\\\Documents\\\\web-dev\\\\projects\\\\reddit\\\\my-redit-app\\\\src\\\\app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport ReactDom from 'react-dom';\nimpo; //css import\n\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const url = useSelector(selectUrl);\n  const data = useSelector(selectPosts);\n  const status = useSelector(state => state.soucre.status);\n  const error = useSelector(state => state.source.error);\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchData(url));\n    }\n  }, [status, dispatch, url]);\n  let content;\n  let postContent;\n\n  if (status === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this);\n  } else if (status === 'succeeded') {\n    content = /*#__PURE__*/_jsxDEV(PostBoxContainer, {\n      data: data,\n      error: error,\n      status: status,\n      comments: \"hide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this);\n    postContent = /*#__PURE__*/_jsxDEV(SinglePostContainer, {\n      data: data,\n      error: error,\n      state: status,\n      comments: \"display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 18\n    }, this);\n  } else if (status === 'failed') {\n    content = /*#__PURE__*/_jsxDEV(LoadFail, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        className: \"header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FilterBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/:postId\",\n          render: () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: postContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6WP86PwKkMx3FxIZU7N5IK98Pbg=\", true);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","ReactDom","impo","App","dispatch","useDispatch","url","useSelector","selectUrl","data","selectPosts","status","state","soucre","error","source","fetchData","content","postContent"],"sources":["C:/Users/emily/Documents/web-dev/projects/reddit/my-redit-app/src/app.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport ReactDom from 'react-dom';\r\nimpo\r\n\r\n//css import\r\nimport './index.css';\r\n\r\n\r\n\r\n\r\n\r\nfunction App(){\r\n\r\nconst dispatch = useDispatch();\r\nconst url = useSelector(selectUrl);\r\nconst data = useSelector(selectPosts);\r\n\r\nconst status = useSelector(state => state.soucre.status)\r\nconst error = useSelector(state => state.source.error)\r\n\r\nuseEffect(() => {\r\n  if (status === 'idle') {\r\n  dispatch(fetchData(url))\r\n  }\r\n}, [status, dispatch, url])\r\n\r\nlet content;\r\nlet postContent;\r\n\r\nif (status === 'loading') {\r\n  content = (<Loading/>)\r\n} else if (status === 'succeeded') {\r\n  content = (<PostBoxContainer data={data} error={error} status={status} comments='hide'/>)\r\n  postContent = (<SinglePostContainer data={data} error={error} state={status} comments='display'/>)\r\n} else if (status === 'failed') {\r\n  content = (<LoadFail/>)\r\n}\r\n\r\n  return  ( \r\n    <Router>\r\n      <div className='app'>\r\n          <Header className='header'/>\r\n          <FilterBar />\r\n          <Routes>\r\n            <Route exact path='/' render={() => (\r\n              <React.Fragment>{content}</React.Fragment>\r\n            )}/>\r\n            <Route exact path='/:postId' render={() => (\r\n              <React.Fragment>{postContent}</React.Fragment>\r\n            )}/>\r\n            <Navigate to='/'/>\r\n          </Routes>\r\n      </div>\r\n    </Router>\r\n)}  \r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACAC,IAAI,C,CAEJ;;AACA,OAAO,aAAP;;;AAMA,SAASC,GAAT,GAAc;EAAA;;EAEd,MAAMC,QAAQ,GAAGC,WAAW,EAA5B;EACA,MAAMC,GAAG,GAAGC,WAAW,CAACC,SAAD,CAAvB;EACA,MAAMC,IAAI,GAAGF,WAAW,CAACG,WAAD,CAAxB;EAEA,MAAMC,MAAM,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaF,MAAvB,CAA1B;EACA,MAAMG,KAAK,GAAGP,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACG,MAAN,CAAaD,KAAvB,CAAzB;EAEAd,SAAS,CAAC,MAAM;IACd,IAAIW,MAAM,KAAK,MAAf,EAAuB;MACvBP,QAAQ,CAACY,SAAS,CAACV,GAAD,CAAV,CAAR;IACC;EACF,CAJQ,EAIN,CAACK,MAAD,EAASP,QAAT,EAAmBE,GAAnB,CAJM,CAAT;EAMA,IAAIW,OAAJ;EACA,IAAIC,WAAJ;;EAEA,IAAIP,MAAM,KAAK,SAAf,EAA0B;IACxBM,OAAO,gBAAI,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAX;EACD,CAFD,MAEO,IAAIN,MAAM,KAAK,WAAf,EAA4B;IACjCM,OAAO,gBAAI,QAAC,gBAAD;MAAkB,IAAI,EAAER,IAAxB;MAA8B,KAAK,EAAEK,KAArC;MAA4C,MAAM,EAAEH,MAApD;MAA4D,QAAQ,EAAC;IAArE;MAAA;MAAA;MAAA;IAAA,QAAX;IACAO,WAAW,gBAAI,QAAC,mBAAD;MAAqB,IAAI,EAAET,IAA3B;MAAiC,KAAK,EAAEK,KAAxC;MAA+C,KAAK,EAAEH,MAAtD;MAA8D,QAAQ,EAAC;IAAvE;MAAA;MAAA;MAAA;IAAA,QAAf;EACD,CAHM,MAGA,IAAIA,MAAM,KAAK,QAAf,EAAyB;IAC9BM,OAAO,gBAAI,QAAC,QAAD;MAAA;MAAA;MAAA;IAAA,QAAX;EACD;;EAEC,oBACE,QAAC,MAAD;IAAA,uBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACI,QAAC,MAAD;QAAQ,SAAS,EAAC;MAAlB;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,SAAD;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI,QAAC,MAAD;QAAA,wBACE,QAAC,KAAD;UAAO,KAAK,MAAZ;UAAa,IAAI,EAAC,GAAlB;UAAsB,MAAM,EAAE,mBAC5B,QAAC,KAAD,CAAO,QAAP;YAAA,UAAiBA;UAAjB;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAIE,QAAC,KAAD;UAAO,KAAK,MAAZ;UAAa,IAAI,EAAC,UAAlB;UAA6B,MAAM,EAAE,mBACnC,QAAC,KAAD,CAAO,QAAP;YAAA,UAAiBC;UAAjB;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAJF,eAOE,QAAC,QAAD;UAAU,EAAE,EAAC;QAAb;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgBA;;GA3COf,G;;KAAAA,G;AA6CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}