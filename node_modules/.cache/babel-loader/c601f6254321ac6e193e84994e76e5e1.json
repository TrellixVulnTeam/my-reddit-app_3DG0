{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const baseUrl = 'https://www.reddit.com/r/dogs';\nexport const redditURL = 'https://www.reddit.com';\nexport const urlFilters = {\n  default: '',\n  hot: '/hot',\n  new: '/new',\n  top: '/top',\n  topNow: '/top/?t=hour',\n  topThisWeek: '/top/?t=week',\n  topThisMonth: '/top/?t=month',\n  topThisYear: '/top/?t=year',\n  topAllTime: '/top/?t=all',\n  rising: '/rising'\n};\nexport const fetchData = createAsyncThunk('fetchdata', async url => await fetch(url).then(response => response.ok ? response : Promise.reject(response)).then(response => response.json()));\nconst initialState = {\n  status: 'idle',\n  url: baseUrl + urlFilters.default + '.json',\n  error: null,\n  data: []\n};\nconst sourceSlice = createSlice({\n  name: 'source',\n  initialState,\n  reducers: {\n    filterChanged(state, action) {\n      const page = action.payload;\n      state.url = baseUrl + urlFilters[page] + '.json';\n      state.status = 'idle';\n    },\n\n    urlChanged(state, action) {\n      const page = action.payloadstate.url = redditURL + page + '.json';\n      state.status = 'idle';\n    }\n\n  },\n  extraReducers: {\n    [fetchData.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchData.fulfilled]: (state, action) => {\n      const newData = action.payload;\n      state.data = newData;\n      state.status = 'succeeded';\n    },\n    [fetchData.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }\n  }\n});\nexport const {\n  filterChanged\n} = sourceSlice.actions;\nexport const {\n  urlChanged\n} = sourceSlice.actions;\nexport const selectUrl = state => state.source.url;\nexport const selectPosts = state => state.source.data;\nexport default sourceSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","baseUrl","redditURL","urlFilters","default","hot","new","top","topNow","topThisWeek","topThisMonth","topThisYear","topAllTime","rising","fetchData","url","fetch","then","response","ok","Promise","reject","json","initialState","status","error","data","sourceSlice","name","reducers","filterChanged","state","action","page","payload","urlChanged","payloadstate","extraReducers","pending","fulfilled","newData","rejected","message","actions","selectUrl","source","selectPosts","reducer"],"sources":["C:/Users/emily/Documents/web-dev/projects/reddit/my-redit-app/src/components/app/sourceSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const baseUrl = 'https://www.reddit.com/r/dogs';\r\nexport const redditURL = 'https://www.reddit.com';\r\n\r\nexport const urlFilters = {\r\n    default: '',\r\n    hot: '/hot',\r\n    new: '/new',\r\n    top: '/top',\r\n    topNow: '/top/?t=hour',\r\n    topThisWeek: '/top/?t=week',\r\n    topThisMonth: '/top/?t=month',\r\n    topThisYear: '/top/?t=year',\r\n    topAllTime: '/top/?t=all',\r\n    rising: '/rising',\r\n}\r\n\r\nexport const fetchData = createAsyncThunk('fetchdata', async (url) =>\r\n    await fetch(url)\r\n    .then(response =>(response.ok ? response : Promise.reject(response)))\r\n    .then(response => response.json())\r\n    )\r\n\r\n    const initialState = {\r\n        status: 'idle',\r\n        url: baseUrl + urlFilters.default + '.json',\r\n        error: null,\r\n        data: [],\r\n    }\r\n\r\n    const sourceSlice = createSlice({\r\n        name:'source',\r\n        initialState,\r\n        reducers: {\r\n            filterChanged(state, action) {\r\n                const page = action.payload\r\n                state.url = baseUrl + urlFilters[page] + '.json'\r\n                state.status = 'idle'\r\n            },\r\n            urlChanged(state, action) {\r\n                const page = action.payloadstate.url = redditURL + page + '.json'\r\n                state.status = 'idle'\r\n            }\r\n        },\r\n        extraReducers: {\r\n            [fetchData.pending]: (state, action) => {\r\n                state.status = 'loading'\r\n            },\r\n            [fetchData.fulfilled]: (state, action) => {\r\n                const newData = action.payload\r\n                state.data = newData;\r\n                state.status = 'succeeded'\r\n            },\r\n            [fetchData.rejected]: (state, action) => {\r\n                state.status = 'failed'\r\n                state.error = action.error.message\r\n            },\r\n        }\r\n    })\r\n\r\n    export const { filterChanged } = sourceSlice.actions;\r\n    export const { urlChanged } = sourceSlice.actions;\r\n    export const selectUrl = state => state.source.url;\r\n    export const selectPosts = state => state.source.data;\r\n    export default sourceSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,OAAO,GAAG,+BAAhB;AACP,OAAO,MAAMC,SAAS,GAAG,wBAAlB;AAEP,OAAO,MAAMC,UAAU,GAAG;EACtBC,OAAO,EAAE,EADa;EAEtBC,GAAG,EAAE,MAFiB;EAGtBC,GAAG,EAAE,MAHiB;EAItBC,GAAG,EAAE,MAJiB;EAKtBC,MAAM,EAAE,cALc;EAMtBC,WAAW,EAAE,cANS;EAOtBC,YAAY,EAAE,eAPQ;EAQtBC,WAAW,EAAE,cARS;EAStBC,UAAU,EAAE,aATU;EAUtBC,MAAM,EAAE;AAVc,CAAnB;AAaP,OAAO,MAAMC,SAAS,GAAGd,gBAAgB,CAAC,WAAD,EAAc,MAAOe,GAAP,IACnD,MAAMC,KAAK,CAACD,GAAD,CAAL,CACLE,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,GAAcD,QAAd,GAAyBE,OAAO,CAACC,MAAR,CAAeH,QAAf,CADrC,EAELD,IAFK,CAEAC,QAAQ,IAAIA,QAAQ,CAACI,IAAT,EAFZ,CAD+B,CAAlC;AAMH,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,MADS;EAEjBT,GAAG,EAAEd,OAAO,GAAGE,UAAU,CAACC,OAArB,GAA+B,OAFnB;EAGjBqB,KAAK,EAAE,IAHU;EAIjBC,IAAI,EAAE;AAJW,CAArB;AAOA,MAAMC,WAAW,GAAG5B,WAAW,CAAC;EAC5B6B,IAAI,EAAC,QADuB;EAE5BL,YAF4B;EAG5BM,QAAQ,EAAE;IACNC,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACzB,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAApB;MACAH,KAAK,CAAChB,GAAN,GAAYd,OAAO,GAAGE,UAAU,CAAC8B,IAAD,CAApB,GAA6B,OAAzC;MACAF,KAAK,CAACP,MAAN,GAAe,MAAf;IACH,CALK;;IAMNW,UAAU,CAACJ,KAAD,EAAQC,MAAR,EAAgB;MACtB,MAAMC,IAAI,GAAGD,MAAM,CAACI,YAAP,CAAoBrB,GAApB,GAA0Bb,SAAS,GAAG+B,IAAZ,GAAmB,OAA1D;MACAF,KAAK,CAACP,MAAN,GAAe,MAAf;IACH;;EATK,CAHkB;EAc5Ba,aAAa,EAAE;IACX,CAACvB,SAAS,CAACwB,OAAX,GAAqB,CAACP,KAAD,EAAQC,MAAR,KAAmB;MACpCD,KAAK,CAACP,MAAN,GAAe,SAAf;IACH,CAHU;IAIX,CAACV,SAAS,CAACyB,SAAX,GAAuB,CAACR,KAAD,EAAQC,MAAR,KAAmB;MACtC,MAAMQ,OAAO,GAAGR,MAAM,CAACE,OAAvB;MACAH,KAAK,CAACL,IAAN,GAAac,OAAb;MACAT,KAAK,CAACP,MAAN,GAAe,WAAf;IACH,CARU;IASX,CAACV,SAAS,CAAC2B,QAAX,GAAsB,CAACV,KAAD,EAAQC,MAAR,KAAmB;MACrCD,KAAK,CAACP,MAAN,GAAe,QAAf;MACAO,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACP,KAAP,CAAaiB,OAA3B;IACH;EAZU;AAda,CAAD,CAA/B;AA8BA,OAAO,MAAM;EAAEZ;AAAF,IAAoBH,WAAW,CAACgB,OAAtC;AACP,OAAO,MAAM;EAAER;AAAF,IAAiBR,WAAW,CAACgB,OAAnC;AACP,OAAO,MAAMC,SAAS,GAAGb,KAAK,IAAIA,KAAK,CAACc,MAAN,CAAa9B,GAAxC;AACP,OAAO,MAAM+B,WAAW,GAAGf,KAAK,IAAIA,KAAK,CAACc,MAAN,CAAanB,IAA1C;AACP,eAAeC,WAAW,CAACoB,OAA3B"},"metadata":{},"sourceType":"module"}